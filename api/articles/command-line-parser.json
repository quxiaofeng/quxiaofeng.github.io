{"title":"C++ Command Line Parser","slug":"command-line-parser","date":"2012-10-27T11:33:33.000Z","updated":"2018-04-21T08:18:25.482Z","comments":true,"path":"api/articles/command-line-parser.json","photos":[],"link":"","excerpt":"Resources and libraries about how to parse command line arguments. Try to make program receive standard and flexible command line arguments.","covers":null,"content":"<p>Resources and libraries about how to parse command line arguments. Try to make program receive standard and flexible command line arguments.</p>\n<a id=\"more\"></a>\n<h2 id=\"Goal\"><a href=\"#Goal\" class=\"headerlink\" title=\"Goal\"></a>Goal</h2><p>Just like the git suite.</p>\n<pre><code>git commit -asm &apos;new commit&apos;    \n</code></pre><ul>\n<li><p>Both short and long form are acceptable.    </p>\n</li>\n<li><p>Can be combined together. It is really compact and really handy to use in this form.    </p>\n</li>\n</ul>\n<h2 id=\"Current-Example-project\"><a href=\"#Current-Example-project\" class=\"headerlink\" title=\"Current Example project\"></a>Current Example project</h2><p><a href=\"http://www.hackorama.com/anyoption/\" target=\"_blank\" rel=\"noopener\">AnyOption</a> is used in the <a href=\"https://github.com/quxiaofeng/dks_software\" target=\"_blank\" rel=\"noopener\">example project</a>.</p>\n<p>It is working well, and the only problem is annoying warnings of strcpy(). Because the visual studio recommends to use strcpy_s(). And also the std::cout can not be seen in Qt debug console.<br>Another problem is AnyOption can read options from a file with “:” separating “item:value” pairs. This kind of non-standard format is not very comfortable to use.</p>\n<h2 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h2><ul>\n<li><p>AnyOption - C/C++ Command line and resource file option parsing   </p>\n<ul>\n<li><p><a href=\"http://www.hackorama.com/anyoption/\" target=\"_blank\" rel=\"noopener\">Home Page</a>    </p>\n</li>\n<li><p><a href=\"https://github.com/hackorama/AnyOption/\" target=\"_blank\" rel=\"noopener\">Github Project Page</a>    </p>\n</li>\n<li><p>Latest version by hamann<a href=\"https://github.com/hamann/AnyOption\" target=\"_blank\" rel=\"noopener\">hamann/AnyOption</a>    </p>\n</li>\n</ul>\n</li>\n<li><p>ArgvParser - C++ class for convenient parsing of command line options  </p>\n<ul>\n<li><a href=\"http://mih.voxindeserto.de/argvparser.html\" target=\"_blank\" rel=\"noopener\">Home Page</a>    </li>\n</ul>\n</li>\n<li><p>QtArg - a small C++ library based on the Qt 4 for parsing command line arguments.    </p>\n<ul>\n<li><p><a href=\"http://code.google.com/p/qtargparser/\" target=\"_blank\" rel=\"noopener\">Home Page</a>    </p>\n</li>\n<li><p><a href=\"http://qtargparser.googlecode.com/files/QtArg-1.2.1-src.zip\" target=\"_blank\" rel=\"noopener\">Download</a>   </p>\n</li>\n</ul>\n</li>\n<li><p>KCmdLineArgs - A class for command-line argument handling.  </p>\n<ul>\n<li><a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kdecore/html/classKCmdLineArgs.html\" target=\"_blank\" rel=\"noopener\">Home Page</a>    </li>\n</ul>\n</li>\n</ul>\n","categories":[{"name":"coding","slug":"coding","count":26,"path":"api/categories/coding.json"}],"tags":[{"name":"cmd","slug":"cmd","count":1,"path":"api/tags/cmd.json"},{"name":"qt","slug":"qt","count":2,"path":"api/tags/qt.json"},{"name":"lib","slug":"lib","count":1,"path":"api/tags/lib.json"},{"name":"c++","slug":"c","count":4,"path":"api/tags/c.json"}]}